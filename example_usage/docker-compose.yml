services:
  # Inventory Service (no dependencies)
  inventory-service:
    build:
      context: ..
      dockerfile: example_usage/inventory-service/Dockerfile
    ports:
      - "9003:9003"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://host.docker.internal:4317
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - example-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9003/health"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 90s
    restart: unless-stopped

  # Order Service (depends on inventory)
  order-service:
    build:
      context: ..
      dockerfile: example_usage/order-service/Dockerfile
    ports:
      - "9002:9002"
    environment:
      - INVENTORY_SERVICE_URL=http://inventory-service:9003
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://host.docker.internal:4317
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - example-network
    depends_on:
      inventory-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9002/health"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 90s
    restart: unless-stopped

  # User Service (depends on order)
  user-service:
    build:
      context: ..
      dockerfile: example_usage/user-service/Dockerfile
    ports:
      - "9001:9001"
    environment:
      - ORDER_SERVICE_URL=http://order-service:9002
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://host.docker.internal:4317
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - example-network
    depends_on:
      order-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/health"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 90s
    restart: unless-stopped

networks:
  example-network:
    driver: bridge
    name: example-usage-network
